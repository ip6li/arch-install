---
- hosts: all
  tasks:

    - name: Install Kubernetes dependencies
      command: pacman -S --noconfirm base-devel ebtables ethtool socat conntrack-tools docker wget crictl

    - name: Enable Docker
      block:
        - name: enable Docker
          command: systemctl enable --now docker
      tags:
        - docker

    - name: System setup
      block:
        - name: Enable forwarding
          copy:
            dest: "/etc/sysctl.d/kubernetes.conf"
            content: |
              net.ipv4.conf.all.forwarding=1
        - name: Enable br_netfilter
          copy:
            dest: "/etc/modules-load.d/br_netfilter.conf"
            content: |
              br_netfilter
        - name: Setup daemon.json
          copy:
            src: "daemon.json"
            dest: "/etc/docker/daemon.json"
      tags:
        - system_setup

    - name: Install Kubernetes (AUR)
      block:
        - name: Get Kubernetes
          become: true
          become_user: aur
          shell: cd /home/aur && curl -O https://aur.archlinux.org/cgit/aur.git/snapshot/{{ item.p }}.tar.gz && tar xvf {{ item.p }}.tar.gz && rm -f {{ item.p }}.tar.gz
          loop:
            - {p: kubectl-bin}
            - {p: kubelet-bin}
            - {p: kubeadm-bin}
            - {p: cni-plugins-bin}
        - name: Delete old Kubernetes
          shell: pacman -R -ss --noconfirm kubeadm-bin kubectl-bin kubelet-bin cni-plugins-bin
        - name: Install Kubernetes
          shell: cd /home/aur/{{ item.p }} && sudo -u aur makepkg -f && pacman --noconfirm -U *.tar.zst
          loop:
            - {p: kubectl-bin}
            - {p: kubelet-bin}
            - {p: kubeadm-bin}
            - {p: cni-plugins-bin}

    - name: Setup Kubernetes
      block:
        - name: Remove old Kubernetes config
          shell: kubeadm reset --force && rm -rf /opt/cni
        - name: Kubernetes init
          shell: kubeadm init --pod-network-cidr={{ pod_network }} --control-plane-endpoint {{ ansible_host }}:6443 --upload-certs

    - name: Set environment
      become: true
      become_user: aur
      shell: mkdir -p $HOME/.kube && sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config && sudo chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Install Calico
      become: true
      become_user: aur
      shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

